{"version":3,"sources":["assets/images/computing-cloud.svg","components/Metadata/index.jsx","components/TableSchema/index.jsx","components/ProgressBar/index.jsx","components/InputFile/index.jsx","components/InputUrl/index.jsx","components/Choose/index.jsx","components/Upload/index.jsx","utils/index.js","App.js","index.js","../node_modules/frictionless.js/node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$"],"names":["module","exports","customFields","label","name","input_type","values","options","Metadata","_ref","metadata","handleChange","React","createElement","Fragment","className","path","htmlFor","type","id","value","title","onChange","description","encoding","required","disabled","encodeData","map","item","key","format","toLowerCase","formatData","option","index","TableSchema","props","schema","setSchema","useState","data","useMemo","columnsSchema","fields","Header","accessor","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","event","newSchema","target","useEffect","renderEditSchemaField","types","Object","assign","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","ProgressBar","offset","setOffset","circleRef","useRef","size","progress","strokeWidth","circleOneStroke","circleTwoStroke","timeRemaining","center","radius","circumference","Math","PI","current","style","width","height","stroke","cx","cy","r","ref","strokeDasharray","strokeDashoffset","x","y","floor","InputFile","onChangeHandler","src","alt","InputUrl","onChangeUrl","onBlur","onKeyDown","keyCode","blur","handleKeyPress","placeholder","Choose","uploadOption","setUploadOption","onClick","Upload","Component","constructor","super","async","formattedSize","selectedFile","this","state","files","length","file","rowStream","keyed","descriptor","sample","toArray","addSchema","e","console","error","bytes","decimals","arguments","undefined","k","dm","sizes","i","log","parseFloat","pow","toFixed","onFormatBytes","hash","hashSha256","metadataHandler","setState","loaded","success","fileExists","onClickHandler","onUploadProgress","progressEvent","onTimeRemaining","total","progressLoaded","kbps","Date","getTime","start","fileSize","client","resource","loading","handleUploadStatus","pushBlob","then","response","catch","datasetId","round","ResourceEditor","handleChangeMetadata","resourceCopy","handleSubmitMetadata","createResource","result","action","window","location","href","config","organizationId","resourceId","ckanResource","frictionlessCkanMapper","resourceFrictionlessToCkan","bqTableName","bq_table_name","uuidv4","ckanResourceCopy","package_id","sha256","lfs_prefix","url","url_type","replace","onChangeResourceId","deleteResource","confirm","status","ui","newUiState","fileOrLink","uploadComplete","isResourceEdit","bind","authToken","api","lfs","Client","resourceSchema","resourceSample","sampleCopy","property","push","onSubmit","preventDefault","defaultProps","element","document","getElementById","getAttribute","ReactDOM","StrictMode","App","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.2ee73d71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/computing-cloud.7bf30162.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Metadata.css\";\r\nimport encodeData from \"../../db/encode.json\";\r\nimport formatData from \"../../db/resource_formats.json\";\r\n\r\n//TODO: add the custom fields as a props and render it in metadata component\r\nconst customFields = [\r\n  {\r\n    label: \"Access Restriction\",\r\n    name: \"restricted\",\r\n    input_type: \"select\",\r\n    values: ['{\"level\": \"public\"}', '{\"level\": \"private\"}'],\r\n    options: [\"Public\", \"Private\"],\r\n  },\r\n];\r\n\r\nconst Metadata = ({ metadata, handleChange}) => {\r\n  return (\r\n    <>\r\n      <h3 className=\"metadata-name\">{metadata.path}</h3>\r\n      <div className=\"metadata-form\">\r\n        <div className=\"metadata-input\">\r\n          <label className=\"metadata-label\" htmlFor=\"title\">\r\n            Title:\r\n          </label>\r\n          <input\r\n            className=\"metadata-input__input\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"title\"\r\n            value={metadata.title || metadata.name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"metadata-input\">\r\n          <label className=\"metadata-label\" htmlFor=\"description\">\r\n            Description:\r\n          </label>\r\n          <input\r\n            className=\"metadata-input__input\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            value={metadata.description || \"\"}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"metadata-input\">\r\n          <label className=\"metadata-label\" htmlFor=\"encoding\">\r\n            Encoding:\r\n          </label>\r\n          <select\r\n            className=\"metadata-input__input\"\r\n            name=\"encoding\"\r\n            id=\"encoding\"\r\n            value={metadata.encoding || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select...\r\n            </option>\r\n            {encodeData.map((item) => (\r\n              <option key={`format-${item.value}`} value={item.value}>\r\n                {item.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"metadata-input\">\r\n          <label className=\"metadata-label\" htmlFor=\"format\">\r\n            Format:\r\n          </label>\r\n          <select\r\n            className=\"metadata-input__input\"\r\n            name=\"format\"\r\n            id=\"format\"\r\n            value={(metadata.format || \"\").toLowerCase()}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select...\r\n            </option>\r\n            {formatData.map((item) => (\r\n              <option key={`format-${item[0]}`} value={item[0].toLowerCase()}>\r\n                {item[0]}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        {customFields &&\r\n          customFields.map((item) => (\r\n            <div key={`metadata-custom-${item.name}`} className=\"metadata-input\">\r\n              <label className=\"metadata-label\" htmlFor=\"format\">\r\n                {item.label}:\r\n              </label>\r\n              <select\r\n                className=\"metadata-input__input\"\r\n                name={item.name}\r\n                id={item.name}\r\n                value={metadata[item.name] || \"\"}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select...\r\n                </option>\r\n                {item.options.map((option, index) => (\r\n                  <option\r\n                    key={`${item.name}-${index}`}\r\n                    value={item.values[index]}\r\n                  >\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMetadata.propTypes = {\r\n  metadata: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Metadata;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTable } from \"react-table\";\r\nimport types from \"../../db/types.json\";\r\n\r\nimport \"./TableSchema.css\";\r\n\r\nconst TableSchema = (props) => {\r\n  const [schema, setSchema] = useState(props.schema);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const data = React.useMemo(() => [...props.data], [schema]);\r\n\r\n  const columnsSchema = schema.fields.map((item, index) => {\r\n    return {\r\n      Header: item.name ? item.name : `column_${index + 1}`,\r\n      accessor: item.name ? item.name : `column_${index + 1}`,\r\n    };\r\n  });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const columns = React.useMemo(() => [...columnsSchema], [schema]);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data });\r\n\r\n  const handleChange = (event, key, index) => {\r\n    const newSchema = { ...schema };\r\n    newSchema.fields[index][key] = event.target.value;\r\n    setSchema(newSchema);\r\n  };\r\n\r\n  //if the the user upload a new file, will update the state\r\n  //and render with the new values\r\n  useEffect(() => {\r\n    setSchema(props.schema);\r\n  }, [props.schema]);\r\n\r\n  const renderEditSchemaField = (key) => {\r\n    if (key === \"type\") {\r\n      return schema.fields.map((item, index) => (\r\n        <td key={`schema-type-field-${key}-${index}`}>\r\n          <select\r\n            className=\"table-tbody-select\"\r\n            value={item[key] || \"\"}\r\n            onChange={(event) => handleChange(event, key, index)}\r\n          >\r\n            {types.type.map((item, index) => {\r\n              return (\r\n                <option\r\n                  key={`schema-type-field-option-${item}-${index}`}\r\n                  value={item}\r\n                >\r\n                  {item}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </td>\r\n      ));\r\n    }\r\n    return schema.fields.map((item, index) => (\r\n      <td key={`schema-field-${key}-${index}`}>\r\n        <input\r\n          className=\"table-tbody-input\"\r\n          type=\"text\"\r\n          value={item[key]}\r\n          onChange={(event) => handleChange(event, key, index)}\r\n        />\r\n      </td>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table-container\">\r\n        <table className=\"table-schema-help\">\r\n          <tbody>\r\n            <tr className=\"table-tbody-help-tr\">\r\n              <td  className=\"table-tbody-help-td-empty\"></td>\r\n            </tr>\r\n            <tr className=\"table-tbody-help-tr\">\r\n              <td  className=\"table-tbody-help-td\">Title</td>\r\n            </tr>\r\n            <tr className=\"table-tbody-help-tr\">\r\n              <td  className=\"table-tbody-help-td\">Description</td>\r\n            </tr>\r\n            <tr className=\"table-tbody-help-tr\">\r\n              <td  className=\"table-tbody-help-td\">Type</td>\r\n            </tr>\r\n            <tr className=\"table-tbody-help-tr\">\r\n              <td  className=\"table-tbody-help-td\">Format</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"table-schema-info_container\">\r\n          <table  className=\"table-schema-info_table\" {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                <tr\r\n                  className=\"table-thead-tr\"\r\n                  {...headerGroup.getHeaderGroupProps()}\r\n                >\r\n                  {headerGroup.headers.map((column) => (\r\n                    <th className=\"table-thead-th\" {...column.getHeaderProps()}>\r\n                      {column.render(\"Header\")}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              <tr className=\"table-tbody-tr-help\">\r\n                {renderEditSchemaField(\"title\")}\r\n              </tr>\r\n              <tr className=\"table-tbody-tr-help\">\r\n                {renderEditSchemaField(\"description\")}\r\n              </tr>\r\n              <tr>{renderEditSchemaField(\"type\")}</tr>\r\n              <tr>{renderEditSchemaField(\"format\")}</tr>\r\n              {rows.map((row) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map((cell) => {\r\n                      return (\r\n                        <td {...cell.getCellProps()} className=\"table-tbody-td\">\r\n                          {cell.render(\"Cell\")}\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nTableSchema.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TableSchema;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ProgressBar.css\";\r\n\r\nconst ProgressBar = (props) => {\r\n  const [offset, setOffset] = useState(0);\r\n  const circleRef = useRef(null);\r\n  const {\r\n    size,\r\n    progress,\r\n    strokeWidth,\r\n    circleOneStroke,\r\n    circleTwoStroke,\r\n    timeRemaining,\r\n  } = props;\r\n\r\n  const center = size / 2;\r\n  const radius = size / 2 - strokeWidth / 2;\r\n  const circumference = 2 * Math.PI * radius;\r\n\r\n  useEffect(() => {\r\n    const progressOffset = ((100 - progress) / 100) * circumference;\r\n    setOffset(progressOffset);\r\n\r\n    circleRef.current.style = \"transition: stroke-dashoffset 850ms ease-in-out\";\r\n  }, [setOffset, progress, circumference, offset]);\r\n\r\n  return (\r\n    <>\r\n      <svg className=\"svg\" width={size} height={size}>\r\n        <circle\r\n          className=\"svg-circle-bg\"\r\n          stroke={circleOneStroke}\r\n          cx={center}\r\n          cy={center}\r\n          r={radius}\r\n          strokeWidth={strokeWidth}\r\n        />\r\n        <circle\r\n          className=\"svg-circle\"\r\n          ref={circleRef}\r\n          stroke={circleTwoStroke}\r\n          cx={center}\r\n          cy={center}\r\n          r={radius}\r\n          strokeWidth={strokeWidth}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={offset}\r\n        />\r\n        <text x={`${center}`} y={`${center + 2}`} className=\"svg-circle-text\">\r\n          {progress}%\r\n        </text>\r\n      </svg>\r\n      {timeRemaining > 0 &&  <span className=\"time-remaining\">{timeRemaining > 60 ? `${Math.floor(timeRemaining /60)} minute${Math.floor(timeRemaining /60) > 1 ? 's' : ''}` : `${Math.floor(timeRemaining)} second${timeRemaining > 1 ? 's' : ''}`} left</span>}\r\n    </>\r\n  );\r\n};\r\n\r\nProgressBar.propTypes = {\r\n  size: PropTypes.number.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  strokeWidth: PropTypes.number.isRequired,\r\n  circleOneStroke: PropTypes.string.isRequired,\r\n  circleTwoStroke: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './InputFile.css'\r\nimport UploadIcon from \"../../assets/images/computing-cloud.svg\";\r\n\r\nconst InputFile = ({ onChangeHandler }) => {\r\n\r\n      return (\r\n            <div className=\"upload-area__drop\">\r\n                <input\r\n                    className=\"upload-area__drop__input\"\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    onChange={onChangeHandler}\r\n                />\r\n                <img\r\n                    className=\"upload-area__drop__icon\"\r\n                    src=\"https://www.shareicon.net/data/256x256/2015/09/05/96087_cloud_512x512.png\"\r\n                    alt=\"upload-icon\"\r\n                />\r\n                <span className=\"upload-area__drop__text\">\r\n                    Drag and drop your files\r\n                    <br />\r\n                    or <br />\r\n                    click to select\r\n                </span>\r\n            </div>\r\n      )\r\n  }\r\n\r\nInputFile.propTypes = {\r\n  onChangeHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default InputFile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./InputUrl.css\";\r\n\r\nconst InputUrl = ({ onChangeUrl }) => {\r\n  const handleKeyPress = (event) => {\r\n    if (event.keyCode === 13) {\r\n      event.target.blur();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-area__url\">\r\n      <label className=\"upload-area__url__label\" htmlFor=\"input-url\">\r\n        URL:\r\n      </label>\r\n      <input\r\n        className=\"upload-area__url__input\"\r\n        id=\"input-url\"\r\n        type=\"url\"\r\n        name=\"input-url\"\r\n        onBlur={onChangeUrl}\r\n        onKeyDown={(event) => handleKeyPress(event)}\r\n        placeholder=\"https://www.data.com/sample.csv\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nInputUrl.propTypes = {\r\n  onChangeUrl: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputUrl;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport InputFile from \"../InputFile\";\r\nimport InputUrl from \"../InputUrl\";\r\nimport './Choose.css'\r\n\r\nconst Choose = ({ onChangeUrl, onChangeHandler }) => {\r\n  const [uploadOption, setUploadOption] = useState(false);\r\n\r\n  return (\r\n    <div className=\"upload-choose\">\r\n      {uploadOption ? (\r\n        <>\r\n          {uploadOption === \"file\" && (\r\n            <InputFile onChangeHandler={onChangeHandler} />\r\n          )}\r\n          {uploadOption === \"url\" && <InputUrl onChangeUrl={onChangeUrl} />}\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <button className=\"choose-btn\" onClick={() => setUploadOption(\"file\")}>Choose a file to Upload </button>\r\n          <p className=\"choose-text\">OR</p>\r\n          <button className=\"choose-btn\" onClick={() => setUploadOption(\"url\")}>Link a file already online</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nChoose.propTypes = {\r\n  onChangeUrl: PropTypes.func.isRequired,\r\n  onChangeHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Choose;\r\n","import React from \"react\";\r\nimport * as data from \"data.js\";\r\nimport frictionlessCkanMapper from \"frictionless-ckan-mapper-js\";\r\nimport toArray from \"stream-to-array\";\r\nimport ProgressBar from \"../ProgressBar\";\r\nimport { onFormatBytes } from \"../../utils\";\r\nimport Choose from \"../Choose\";\r\n\r\nclass Upload extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      datasetId: props.datasetId,\r\n      selectedFile: null,\r\n      fileSize: 0,\r\n      formattedSize: \"0 KB\",\r\n      start: \"\",\r\n      loaded: 0,\r\n      success: false,\r\n      error: false,\r\n      fileExists: false,\r\n      loading: false,\r\n      timeRemaining: 0,\r\n    };\r\n  }\r\n\r\n  onChangeHandler = async (event) => {\r\n    let { formattedSize, selectedFile } = this.state;\r\n\r\n    if (event.target.files.length > 0) {\r\n      selectedFile = event.target.files[0];\r\n      const file = data.open(selectedFile);\r\n      try {\r\n        const rowStream = await file.rows({ size: 20, keyed: true });\r\n        file.descriptor.sample = await toArray(rowStream);\r\n        await file.addSchema();\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n      formattedSize = onFormatBytes(file.size);\r\n      const hash = await file.hashSha256();\r\n      this.props.metadataHandler(Object.assign(file.descriptor, { hash }));\r\n    }\r\n\r\n    this.setState({\r\n      selectedFile,\r\n      loaded: 0,\r\n      success: false,\r\n      fileExists: false,\r\n      error: false,\r\n      formattedSize,\r\n    });\r\n\r\n    this.onClickHandler();\r\n  };\r\n\r\n  onUploadProgress = (progressEvent) => {\r\n    this.onTimeRemaining(progressEvent.loaded);\r\n    this.setState({\r\n      loaded: (progressEvent.loaded / progressEvent.total) * 100,\r\n    });\r\n  };\r\n\r\n  onTimeRemaining = (progressLoaded) => {\r\n    const end = new Date().getTime();\r\n    const duration = (end - this.state.start) / 1000;\r\n    const bps = progressLoaded / duration;\r\n    const kbps = bps / 1024;\r\n    const timeRemaining = (this.state.fileSize - progressLoaded) / kbps;\r\n\r\n    this.setState({\r\n      timeRemaining: timeRemaining / 1000,\r\n    });\r\n  };\r\n\r\n  onClickHandler = async () => {\r\n    const start = new Date().getTime();\r\n    const { selectedFile } = this.state;\r\n    const { client } = this.props;\r\n\r\n    const resource = data.open(selectedFile);\r\n\r\n    this.setState({\r\n      fileSize: resource.size,\r\n      start,\r\n      loading: true,\r\n    });\r\n\r\n    this.props.handleUploadStatus({\r\n      loading: true,\r\n      error: false,\r\n      success: false,\r\n    });\r\n\r\n    // Use client to upload file to the storage and track the progress\r\n    client\r\n      .pushBlob(resource, this.onUploadProgress)\r\n      .then((response) => {\r\n        this.setState({\r\n          success: response.success,\r\n          loading: false,\r\n          fileExists: response.fileExists,\r\n          loaded: 100\r\n        });\r\n        this.props.handleUploadStatus({\r\n          loading: false,\r\n          success: response.success,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: true, loading: false });\r\n        this.props.handleUploadStatus({\r\n          loading: false,\r\n          success: false,\r\n          error: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      success,\r\n      fileExists,\r\n      error,\r\n      timeRemaining,\r\n      selectedFile,\r\n      formattedSize,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"upload-area\">\r\n        <Choose\r\n          onChangeHandler={this.onChangeHandler}\r\n          onChangeUrl={(event) => console.log(\"Get url:\", event.target.value)}\r\n        />\r\n        <div className=\"upload-area__info\">\r\n          {selectedFile && (\r\n            <>\r\n              <ul className=\"upload-list\">\r\n                <li className=\"list-item\">\r\n                  <div className=\"upload-list-item\">\r\n                    <div>\r\n                      <p className=\"upload-file-name\">{selectedFile.name}</p>\r\n                      <p className=\"upload-file-size\">{formattedSize}</p>\r\n                    </div>\r\n                    <div>\r\n                      <ProgressBar\r\n                        progress={Math.round(this.state.loaded)}\r\n                        size={50}\r\n                        strokeWidth={5}\r\n                        circleOneStroke=\"#d9edfe\"\r\n                        circleTwoStroke={\"#7ea9e1\"}\r\n                        timeRemaining={timeRemaining}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <h2 className=\"upload-message\">\r\n                {success && !fileExists && !error && \"File uploaded successfully\"}\r\n                {fileExists && \"File uploaded successfully\"}\r\n                {error && \"Upload failed\"}\r\n              </h2>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Upload;\r\n","const getFileExtension = (filename) => {\r\n    return /[.]/.exec(filename) ? /[^.]+$/.exec(filename)[0] : undefined;\r\n  };\r\n\r\nconst  onFormatTitle = (name) => {\r\n    return name\r\n      .replace(/\\.[^/.]+$/, \"\")\r\n      .replace(/_/g, \" \")\r\n      .replace(/-/g, \" \");\r\n  };\r\n\r\nconst onFormatName = (name) => {\r\n    return name.replace(/\\.[^/.]+$/, \"\");\r\n  };\r\n\r\nconst onFormatBytes = (bytes, decimals = 1) => {\r\n    if (bytes === 0) return \"0 Bytes\";\r\n\r\n    const k = 1000;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\r\n  };\r\n\r\nconst removeHyphen = (id) => {\r\n   return id.replace(/-/g, \"\");\r\n  };\r\n\r\nexport {\r\n    getFileExtension,\r\n    onFormatTitle,\r\n    onFormatName,\r\n    onFormatBytes,\r\n    removeHyphen,\r\n}","import React from \"react\";\r\nimport { Client } from \"ckanClient\";\r\nimport PropTypes from \"prop-types\";\r\nimport frictionlessCkanMapper from \"frictionless-ckan-mapper-js\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Metadata from \"./components/Metadata\";\r\nimport TableSchema from \"./components/TableSchema\";\r\nimport Upload from \"./components/Upload\";\r\nimport \"./App.css\";\r\nimport { removeHyphen } from \"./utils\";\r\n\r\nexport class ResourceEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      datasetId: this.props.config.datasetId,\r\n      resourceId: \"\",\r\n      resource: this.props.resource || {},\r\n      ui: {\r\n        fileOrLink: \"\",\r\n        uploadComplete: undefined,\r\n        success: false,\r\n        error: false,\r\n        loading: false,\r\n      },\r\n      client: null,\r\n      isResourceEdit: false,\r\n    };\r\n    this.metadataHandler = this.metadataHandler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { config } = this.props;\r\n    const {\r\n      authToken,\r\n      api,\r\n      lfs,\r\n      organizationId,\r\n      datasetId,\r\n      resourceId,\r\n    } = config;\r\n\r\n    const client = new Client(\r\n      `${authToken}`,\r\n      `${organizationId}`,\r\n      `${datasetId}`,\r\n      `${api}`,\r\n      `${lfs}`\r\n    );\r\n\r\n    //Check if the user is editing resource\r\n    if (resourceId) {\r\n      const resource = await client.action(\"resource_show\", { id: resourceId });\r\n      const resourceSchema = await client.action(\"resource_schema_show\", {\r\n        id: resourceId,\r\n      });\r\n      const resourceSample = await client.action(\"resource_sample_show\", {\r\n        id: resourceId,\r\n      });\r\n\r\n      let resourceCopy = resource.result;\r\n      let sampleCopy = [];\r\n\r\n      try {\r\n        // push the values to an array\r\n        for (const property in resourceSample.result) {\r\n          sampleCopy.push(resourceSample.result[property]);\r\n        }\r\n        // push sample as an array to be able to render in tableschema component\r\n        resourceCopy.sample = sampleCopy;\r\n        resourceCopy.schema = resourceSchema.result;\r\n      } catch (e) {\r\n        console.error(e);\r\n        //generate empty values not to break the tableschema component\r\n        resourceCopy.schema = { fields: [] };\r\n        resourceCopy.sample = [];\r\n      }\r\n\r\n      return this.setState({\r\n        client,\r\n        resourceId,\r\n        resource: resourceCopy,\r\n        isResourceEdit: true,\r\n      });\r\n    }\r\n\r\n    this.setState({ client });\r\n  }\r\n\r\n  metadataHandler(resource) {\r\n    this.setState({\r\n      resource,\r\n    });\r\n  }\r\n\r\n  handleChangeMetadata = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let resourceCopy = this.state.resource;\r\n    resourceCopy[name] = value;\r\n\r\n    this.setState({\r\n      resource: resourceCopy,\r\n    });\r\n  };\r\n\r\n  handleSubmitMetadata = async () => {\r\n    const { resource, client } = this.state;\r\n\r\n    await this.createResource(resource);\r\n\r\n    // Change state of dataset to active if draft atm\r\n    // this relates to how CKAN v2 has a phased dataset creation. See e.g.\r\n    // https://github.com/ckan/ckan/blob/master/ckan/controllers/package.py#L917\r\n\r\n    // only need to do this test if in resource create mode if editing a\r\n    // resource this is unnecessary\r\n    // TODO: update this in future to check for edit mode\r\n    const isResourceCreate = true;\r\n    if (isResourceCreate) {\r\n      const datasetMetadata = await client.action(\"package_show\", {\r\n        id: this.state.datasetId,\r\n      });\r\n      let result = datasetMetadata.result;\r\n\r\n      if (result.state == \"draft\") {\r\n        result.state = \"active\";\r\n        await client.action(\"package_update\", result);\r\n      }\r\n    }\r\n\r\n    // Redirect to dataset page\r\n    return (window.location.href = `/dataset/${this.state.datasetId}`);\r\n  };\r\n\r\n  createResource = async (resource) => {\r\n    const { client } = this.state;\r\n    const { config } = this.props;\r\n    const { organizationId, datasetId, resourceId } = config;\r\n\r\n    const ckanResource = frictionlessCkanMapper.resourceFrictionlessToCkan(\r\n      resource\r\n    );\r\n\r\n    //create a valid format from sample\r\n    let data = { ...ckanResource.sample };\r\n    //delete sample because is an invalid format\r\n    delete ckanResource.sample;\r\n    //generate an unique id for bq_table_name property\r\n    let bqTableName = ckanResource.bq_table_name\r\n      ? ckanResource.bq_table_name\r\n      : uuidv4();\r\n    // create a copy from ckanResource to add package_id, name, url, sha256,size, lfs_prefix, url, url_type\r\n    // without this properties ckan-blob-storage doesn't work properly\r\n    let ckanResourceCopy = {\r\n      ...ckanResource,\r\n      package_id: this.state.datasetId,\r\n      name: resource.name || resource.title,\r\n      sha256: resource.hash,\r\n      size: resource.size,\r\n      lfs_prefix: `${organizationId}/${datasetId}`,\r\n      url: resource.name,\r\n      url_type: \"upload\",\r\n      bq_table_name: removeHyphen(bqTableName),\r\n      sample: data,\r\n    };\r\n\r\n    //Check if the user is editing resource, call resource_update and redirect to the dataset page\r\n    if (resourceId) {\r\n      ckanResourceCopy = {\r\n        ...ckanResourceCopy,\r\n        id: resourceId,\r\n      };\r\n      await client.action(\"resource_update\", ckanResourceCopy);\r\n\r\n      return (window.location.href = `/dataset/${datasetId}`);\r\n    }\r\n    await client\r\n      .action(\"resource_create\", ckanResourceCopy)\r\n      .then((response) => {\r\n        this.onChangeResourceId(response.result.id);\r\n      });\r\n  };\r\n\r\n  deleteResource = async () => {\r\n    const { resource, client, datasetId } = this.state;\r\n    if (window.confirm(\"Are you sure to delete this resource?\")) {\r\n      await client.action(\"resource_delete\", { id: resource.id });\r\n\r\n      return (window.location.href = `/dataset/${datasetId}`);\r\n    }\r\n  };\r\n\r\n  handleUploadStatus = (status) => {\r\n    const { ui } = this.state;\r\n    const newUiState = {\r\n      ...ui,\r\n      success: status.success,\r\n      error: status.error,\r\n      loading: status.loading,\r\n    };\r\n\r\n    this.setState({ ui: newUiState });\r\n  };\r\n\r\n  onChangeResourceId = (resourceId) => {\r\n    this.setState({ resourceId });\r\n  };\r\n\r\n  render() {\r\n    const { loading, success } = this.state.ui;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <form\r\n          className=\"upload-wrapper\"\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n            if (this.state.isResourceEdit) {\r\n              return this.createResource(this.state.resource);\r\n            }\r\n            return this.handleSubmitMetadata();\r\n          }}\r\n        >\r\n          <div className=\"upload-header\">\r\n            <h2 className=\"upload-header__title\">Resource Editor</h2>\r\n          </div>\r\n\r\n          <Upload\r\n            client={this.state.client}\r\n            resource={this.state.resource}\r\n            metadataHandler={this.metadataHandler}\r\n            datasetId={this.state.datasetId}\r\n            handleUploadStatus={this.handleUploadStatus}\r\n            onChangeResourceId={this.onChangeResourceId}\r\n          />\r\n\r\n          <div className=\"upload-edit-area\">\r\n            <Metadata\r\n              metadata={this.state.resource}\r\n              handleChange={this.handleChangeMetadata}\r\n            />\r\n            {this.state.resource.schema && (\r\n              <TableSchema\r\n                schema={this.state.resource.schema}\r\n                data={this.state.resource.sample || []}\r\n              />\r\n            )}\r\n            {!this.state.isResourceEdit ? (\r\n              <button disabled={!success} className=\"btn\">\r\n                Save and Publish\r\n              </button>\r\n            ) : (\r\n              <div className=\"resource-edit-actions\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-delete\"\r\n                  onClick={this.deleteResource}\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button className=\"btn\">Update</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * If the parent component doesn't specify a `config` and scope prop, then\r\n * the default values will be used.\r\n * */\r\nResourceEditor.defaultProps = {\r\n  config: {\r\n    authToken: \"be270cae-1c77-4853-b8c1-30b6cf5e9878\",\r\n    api: \"http://localhost:5000\",\r\n    lfs: \"http://localhost:5001\", // Feel free to modify this\r\n    organizationId: \"myorg\",\r\n    datasetId: \"data-test-2\",\r\n  },\r\n};\r\n\r\nResourceEditor.propTypes = {\r\n  config: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ResourceEditor;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n// Mount the ResourceEditor app explicitly\r\n// (make sure you call the function after it's loaded)\r\nfunction mountResourceEditorApp([elementId, config, resource] = ['root', {\r\n  authToken: null,\r\n  api: null,\r\n  lfs: null,\r\n  organizationId: null,\r\n  datasetId: null,\r\n  resourceId: null,\r\n}, {}]) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App config={config} resource={resource} />\r\n    </React.StrictMode>,\r\n    document.getElementById(elementId)\r\n  );\r\n};\r\n\r\n\r\n// Automatically mount the app if an element with id='ResourceEditor' exists\r\nconst element = document.getElementById('ResourceEditor');\r\nif (element) {\r\n  const config = {\r\n    datasetId: element.getAttribute('data-dataset-id'),\r\n    api: element.getAttribute('data-api'),\r\n    lfs: element.getAttribute('data-lfs'),\r\n    authToken: element.getAttribute('data-auth-token'),\r\n    organizationId: element.getAttribute('data-organization-id'),\r\n    resourceId: element.getAttribute('data-resource-id')\r\n  }\r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n        <App\r\n          config={config}\r\n          resource={ element.getAttribute('data-resource')}\r\n        />\r\n    </React.StrictMode>,\r\n    element\r\n  );\r\n}\r\n\r\n\r\nexport { ResourceEditor } from './App';\r\n","var map = {\n\t\"./geojson.json\": 291,\n\t\"./table-schema.json\": 669,\n\t\"./topojson.json\": 292\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 668;","var map = {\n\t\"./geojson.json\": 419,\n\t\"./table-schema.json\": 975,\n\t\"./topojson.json\": 420\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 974;"],"sourceRoot":""}